/* Copyright (c) 2024 Soft The Next, All Rights Reserved. */

const fs = require("fs"), terser = require("terser"),
    inputFiles = [
        "adminMiddleware.js",
        "branchMiddleware.js",
        "browserInstance.js",
        "config.js",
        "sequelize.js",
        "server.js",
        "staffMiddleware.js",

            "controllers/adminBranch.controller.js",
            "controllers/adminCustomer.controller.js",
            "controllers/adminCustomerProduct.controller.js",
            "controllers/adminProduct.controller.js",
            "controllers/adminProfile.controller.js",
            "controllers/adminRecovery.controller.js",
            "controllers/adminStaff.controller.js",
            "controllers/adminStaffPayout.conroller.js",
            "controllers/branchCustomer.controller.js",
            "controllers/branchCustomerProduct.controller.js",
            "controllers/branchProduct.controller.js",
            "controllers/branchProfile.controller.js",
            "controllers/branchStaff.controller.js",
            "controllers/country.controller.js",
            "controllers/employee.controller.js",
            "controllers/public.controller.js",
            "controllers/staffCustomer.controller.js",
            "controllers/staffCustomerProduct.controller.js",
            "controllers/staffProduct.controller.js",
            "controllers/staffProfile.controller.js",
            "controllers/staffRecovery.controller.js",
            "controllers/user.controller.js",

            "models/branch.model.js",
            "models/customer.model.js",
            "models/customerBranchShiftTracking.model.js",
            "models/customerProduct.model.js",
            "models/customerProductTracking.model.js",
            "models/customerWalkinTracking.model.js",
            "models/product.model.js",
            "models/recovery.model.js",
            "models/recoveryTracking.model.js",
            "models/staff.model.js",
            "models/staffPayout.model.js",
            "models/staffTracking.model.js",
            "models/user.model.js",
            "models/wallpaper.model.js",
            "models/websiteConfig.model.js",

            "routes/adminBranch.routes.js",
            "routes/adminCustomer.routes.js",
            "routes/adminCustomerProduct.routes.js",
            "routes/adminProduct.routes.js",
            "routes/adminProfile.routes.js",
            "routes/adminRecovery.routes.js",
            "routes/adminStaff.routes.js",
            "routes/adminStaffPayout.routes.js",
            "routes/branchCustomer.routes.js",
            "routes/branchCustomerProduct.routes.js",
            "routes/branchProduct.routes.js",
            "routes/branchProfile.routes.js",
            "routes/branchStaff.routes.js",
            "routes/country.routes.js",
            "routes/employee.routes.js",
            "routes/public.routes.js",
            "routes/staffCustomer.routes.js",
            "routes/staffCustomerProduct.routes.js",
            "routes/staffProduct.routes.js",
            "routes/staffProfile.routes.js",
            "routes/staffRecovery.routes.js",
            "routes/user.routes.js",

    ],

  outputDirectory = "minified"; fs.mkdirSync("minified",{ recursive: !0 }); const copyrightComment = `/* Copyright (c) ${(new Date).getFullYear()} Soft The Next, All Rights Reserved. */`; async function minifyCode() { for (const o of inputFiles) try { const e = fs.readFileSync(o,"utf8"),s = await terser.minify(e,{ compress: !0,mangle: !0,output: { comments: !1 } }); if (s.error) console.error(`Error during minification of ${o}:`,s.error); else { const e = `minified/${o.replace(".js",".js")}`,r = `${copyrightComment}\n\n${s.code}`; fs.writeFileSync(e,r),console.log(`Minified ${o} and saved to ${e}`) } } catch (o) { console.log(o) } } minifyCode();
